<!DOCTYPE html>
<html>
  <head>
    <?=$this->fetch('common/meta.phtml')?>
    <?=$this->fetch('common/styles.phtml')?>
    <title>Manage</title>
  </head>
  <body>
    <?=$this->fetch('manage/menubar.phtml', ['board_id' => array_key_first(MB_BOARDS), 'thread_id' => null])?>
    <?=$this->fetch('common/header.phtml', ['header' => ['title' => 'Manage', 'subtitle' => 'Management interface']])?>
    <hr>
    <?php
      switch ($route) {
        case 'accounts':
          if (funcs_manage_get_role() !== MB_ROLE_SUPERADMIN) {
            throw new AppException('manage.phtml', 'inline', 'insufficient permissions', SC_FORBIDDEN);
          }

          echo $this->fetch('manage/accounts.phtml', ['account_details' => select_account_details()]);
          break;
        case 'import':
          if (funcs_manage_get_role() !== MB_ROLE_SUPERADMIN) {
            throw new AppException('manage.phtml', 'inline', 'insufficient permissions', SC_FORBIDDEN);
          }

          echo $this->fetch('manage/importform.phtml');
          break;
        case 'rebuild':
          if (funcs_manage_get_role() !== MB_ROLE_SUPERADMIN) {
            throw new AppException('manage.phtml', 'inline', 'insufficient permissions', SC_FORBIDDEN);
          }

          echo $this->fetch('manage/rebuildform.phtml');
          break;
        case 'posts':
          // set constants
          $posts_per_page = 50;

          // get posts
          $posts = select_all_posts(true, $posts_per_page * $page, $posts_per_page);

          // get reply counts
          foreach ($posts as $key => &$post) {
            if ($post['parent_id'] !== 0) {
              continue;
            }

            $post['replies_n'] = count_posts(session_id(), $post['board_id'], $post['post_id'], false, false);
          }

          // get post count
          $posts_n = count_all_posts();

          // calculate page count
          $page_n = ceil($posts_n / $posts_per_page);

          echo $this->fetch('manage/modform.phtml', [
            'posts' => $posts,
            'page' => $page,
            'page_n' => $page_n
          ]);
          echo $this->fetch('common/pagetable.phtml', ['page' => $page, 'page_n' => $page_n]);
          break;
        case 'status':
        default: echo 'Default route'; break;
      }
    ?>
    <hr>
    <div class="container-centered">
      <?=$this->fetch('common/footer.phtml')?>
    </div>

    <?=$this->fetch('common/scripts.phtml')?>
  </body>
</html>
