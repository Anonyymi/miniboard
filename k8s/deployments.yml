apiVersion: apps/v1
kind: Deployment
metadata:
  name: miniboard-mariadb
spec: # spec for deployment
  selector:
    matchLabels:
      run: miniboard-mariadb
  replicas: 1
  template: # blueprint for pods
    metadata:
      labels:
        run: miniboard-mariadb # service looks for this label
    spec: # spec for pods
      containers:
      - name: miniboard-mariadb
        image: mariadb:10.6
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_CHARSET
          value: utf8
        - name: MYSQL_COLLATION
          value: utf8mb4_unicode_ci
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: miniboard-mariadb-root
              key: PASSWORD
        - name: MYSQL_DATABASE
          value: miniboard_db
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: miniboard-mariadb-user
              key: USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: miniboard-mariadb-user
              key: PASSWORD
        volumeMounts:
        - name: miniboard-mariadb-pv
          mountPath: /var/lib/mysql
      volumes:
      - name: miniboard-mariadb-pv
        persistentVolumeClaim:
          claimName: miniboard-mariadb-pv-claim

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miniboard-redis
spec: # spec for deployment
  selector:
    matchLabels:
      run: miniboard-redis
  replicas: 1
  template: # blueprint for pods
    metadata:
      labels:
        run: miniboard-redis # service looks for this label
    spec: # spec for pods
      containers:
      - name: miniboard-redis
        image: redis:7.0-alpine
        args: ["--save 60 1", "--loglevel verbose", "--requirepass ${REDIS_PASS}"]
        ports:
        - containerPort: 6379
        env:
        - name: REDIS_PASS
          valueFrom:
            secretKeyRef:
              name: miniboard-redis-auth
              key: PASSWORD
        volumeMounts:
        - name: miniboard-redis-pv
          mountPath: /data
      volumes:
      - name: miniboard-redis-pv
        persistentVolumeClaim:
          claimName: miniboard-redis-pv-claim

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miniboard-app
spec: # spec for deployment
  selector:
    matchLabels:
      run: miniboard-app
  replicas: 4
  template: # blueprint for pods
    metadata:
      labels:
        run: miniboard-app # service looks for this label
    spec: # spec for pods
      containers:
      - name: miniboard-app
        image: ghcr.io/anonyymi/miniboard/app:latest
        ports:
        - containerPort: 9000
        env:
        - name: PHP_POST_MAX_SIZE
          value: 100M
        - name: PHP_UPLOAD_MAX_FILESIZE
          value: 128M
        - name: MB_TIMEZONE
          value: Europe/Helsinki
        - name: MB_DB_HOST
          value: miniboard-mariadb
        - name: MB_DB_NAME
          value: miniboard_db
        - name: MB_DB_USER
          valueFrom:
            secretKeyRef:
              name: miniboard-mariadb-user
              key: USER
        - name: MB_DB_PASS
          valueFrom:
            secretKeyRef:
              name: miniboard-mariadb-user
              key: PASSWORD
        - name: REDIS_HOST
          value: miniboard-redis
        - name: REDIS_PASS
          valueFrom:
            secretKeyRef:
              name: miniboard-redis-auth
              key: PASSWORD
        volumeMounts:
        - name: miniboard-app-pv
          mountPath: /app/public/src
      volumes:
      - name: miniboard-app-pv
        persistentVolumeClaim:
          claimName: miniboard-app-pv-claim

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miniboard-nginx
spec:
  selector:
    matchLabels:
      run: miniboard-nginx
  replicas: 2
  template:
    metadata:
      labels:
        run: miniboard-nginx
    spec:
      containers:
      - name: miniboard-nginx
        image: ghcr.io/anonyymi/miniboard/nginx:latest
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: NGINX_CLIENT_MAX_BODY_SIZE
          value: 32M
        - name: NGINX_REAL_IP_HEADER
          value: X-Real-IP
        - name: NGINX_REAL_IP_VAR
          value: $binary_remote_addr
        - name: APP_HOST
          value: miniboard-app
        - name: APP_PORT
          value: '9000'
        volumeMounts:
        - name: miniboard-nginx-pv
          mountPath: /app/public/src
          readOnly: true
      volumes:
      - name: miniboard-nginx-pv
        persistentVolumeClaim:
          claimName: miniboard-app-pv-claim
          readOnly: true
