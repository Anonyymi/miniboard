version: '3.8'

services:
  app:
    image: anonyymi/miniboard:latest
    pull_policy: build
    build:
      context: .
      dockerfile: docker/miniboard/Dockerfile.prod
    restart: on-failure
    networks:
      - app
    volumes:
      - app:/app/public/src
    expose:
      - 9000
    environment:
      MB_DB_HOST: mariadb
      MB_DB_NAME: ${DB_NAME}
      MB_DB_USER: ${DB_USER}
      MB_DB_PASS: ${DB_PASS}
    depends_on:
      - mariadb

  mariadb:
    image: mariadb:10.6
    restart: on-failure
    healthcheck:
      test: ['CMD', 'mysqladmin', '-u${DB_USER}', '-p${DB_PASS}', 'ping', '--silent']
      interval: 5s
      timeout: 1s
      retries: 2
      start_period: 10s
    networks:
      - app
    volumes:
      - mariadb:/var/lib/mysql
    expose:
      - 3306
    environment:
      MYSQL_CHARSET: utf8
      MYSQL_COLLATION: utf8mb4_unicode_ci
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}

  flyway:
    image: anonyymi/flyway:latest
    pull_policy: build
    build:
      context: .
      dockerfile: docker/flyway/Dockerfile.prod
    restart: on-failure
    networks:
      - app
    command: -url=jdbc:mysql://mariadb -schemas=${DB_NAME} -user=root -password=${DB_ROOT_PASS} -connectRetries=60 migrate
    depends_on:
      - mariadb

  nginx:
    image: anonyymi/nginx:latest
    pull_policy: build
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile.prod
    restart: on-failure
    networks:
      - app
    volumes:
      - app:/app/public/src:ro
    ports:
      - '80:80'
    depends_on:
      - app

networks:
  app:
    driver: bridge

volumes:
  app:
  mariadb:
